function Random.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push pointer 0
return
function Random.xor 0
push argument 0
push argument 1
or
push argument 0
not
push argument 1
not
or
and
return
function Random.next 0
push argument 0
pop pointer 0
push this 0
push this 0
push constant 2
call Math.multiply 2
push constant 2
call Math.multiply 2
push constant 2
call Math.multiply 2
push constant 2
call Math.multiply 2
push constant 2
call Math.multiply 2
push constant 2
call Math.multiply 2
push constant 2
call Math.multiply 2
call Random.xor 2
pop this 0
push this 0
push this 0
push constant 2
call Math.divide 2
push constant 2
call Math.divide 2
push constant 2
call Math.divide 2
push constant 2
call Math.divide 2
push constant 2
call Math.divide 2
push constant 2
call Math.divide 2
push constant 2
call Math.divide 2
push constant 2
call Math.divide 2
push constant 2
call Math.divide 2
call Random.xor 2
pop this 0
push this 0
push this 0
push constant 2
call Math.multiply 2
push constant 2
call Math.multiply 2
push constant 2
call Math.multiply 2
push constant 2
call Math.multiply 2
push constant 2
call Math.multiply 2
push constant 2
call Math.multiply 2
push constant 2
call Math.multiply 2
push constant 2
call Math.multiply 2
call Random.xor 2
pop this 0
push this 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
neg
return
goto IF_END0
label IF_FALSE0
push this 0
return
label IF_END0
function Random.nextr 2
push argument 0
pop pointer 0
push pointer 0
call Random.next 1
pop local 0
push local 0
push argument 1
call Math.divide 2
pop local 1
push local 0
push local 1
push argument 1
call Math.multiply 2
sub
return
function Random.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
