function Block.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 2
push argument 1
pop this 3
push argument 2
pop this 0
push argument 3
pop this 4
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 4
pop this 7
push this 7
push this 7
call Matrix.new 2
pop this 1
push this 1
push constant 0
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 1
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 2
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 3
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
label IF_FALSE0
push this 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 2
pop this 7
push this 7
push this 7
call Matrix.new 2
pop this 1
push this 1
push constant 0
push constant 0
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 1
push constant 0
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 0
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 1
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
label IF_FALSE1
push this 0
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 3
pop this 7
push this 7
push this 7
call Matrix.new 2
pop this 1
push this 1
push constant 0
push constant 0
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 1
push constant 0
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 2
push constant 0
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 1
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
label IF_FALSE2
push this 0
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 3
pop this 7
push this 7
push this 7
call Matrix.new 2
pop this 1
push this 1
push constant 1
push constant 0
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 2
push constant 0
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 0
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 1
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
label IF_FALSE3
push this 0
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 3
pop this 7
push this 7
push this 7
call Matrix.new 2
pop this 1
push this 1
push constant 0
push constant 0
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 1
push constant 0
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 1
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 2
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
label IF_FALSE4
push this 0
push constant 5
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 3
pop this 7
push this 7
push this 7
call Matrix.new 2
pop this 1
push this 1
push constant 0
push constant 0
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 0
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 1
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 2
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
label IF_FALSE5
push this 0
push constant 6
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 3
pop this 7
push this 7
push this 7
call Matrix.new 2
pop this 1
push this 1
push constant 2
push constant 0
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 0
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 1
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
push this 1
push constant 2
push constant 1
push constant 1
call Matrix.set 4
pop temp 0
label IF_FALSE6
push this 0
push constant 0
lt
push this 0
push constant 6
gt
or
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
call Screen.clearScreen 0
pop temp 0
push constant 31
call String.new 1
push constant 86
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 66
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 107
call String.appendChar 2
push constant 46
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 107
call String.appendChar 2
push constant 84
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 0
call Output.printInt 1
pop temp 0
push constant 42
call String.new 1
push constant 32
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 48
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 54
call String.appendChar 2
push constant 44
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
call Sys.halt 0
pop temp 0
label IF_FALSE7
push pointer 0
return
function Block.draw 3
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 1
push this 7
lt
not
if-goto WHILE_END0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push this 7
lt
not
if-goto WHILE_END1
push this 1
push local 1
push local 2
call Matrix.get 3
pop local 0
push local 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push constant 1
add
push local 1
push this 4
call Math.multiply 2
add
push this 3
push constant 1
add
push local 2
push this 4
call Math.multiply 2
add
push this 2
push constant 1
sub
push local 1
push constant 1
add
push this 4
call Math.multiply 2
add
push this 3
push constant 1
sub
push local 2
push constant 1
add
push this 4
call Math.multiply 2
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Block.erase 3
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 1
push this 7
lt
not
if-goto WHILE_END0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push this 7
lt
not
if-goto WHILE_END1
push this 1
push local 1
push local 2
call Matrix.get 3
pop local 0
push local 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push constant 1
add
push local 1
push this 4
call Math.multiply 2
add
push this 3
push constant 1
add
push local 2
push this 4
call Math.multiply 2
add
push this 2
push constant 1
sub
push local 1
push constant 1
add
push this 4
call Math.multiply 2
add
push this 3
push constant 1
sub
push local 2
push constant 1
add
push this 4
call Math.multiply 2
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
return
function Block.rotateRight 0
push argument 0
pop pointer 0
push pointer 0
call Block.erase 1
pop temp 0
push this 1
call Matrix.rotateRight 1
pop temp 0
push pointer 0
call Block.draw 1
pop temp 0
push constant 0
return
function Block.moveRight 0
push argument 0
pop pointer 0
push pointer 0
call Block.erase 1
pop temp 0
push this 2
push this 4
add
pop this 2
push this 5
push constant 1
add
pop this 5
push pointer 0
call Block.draw 1
pop temp 0
push constant 0
return
function Block.moveDown 0
push argument 0
pop pointer 0
push pointer 0
call Block.erase 1
pop temp 0
push this 3
push this 4
add
pop this 3
push this 6
push constant 1
add
pop this 6
push pointer 0
call Block.draw 1
pop temp 0
push constant 0
return
function Block.moveNDown 0
push argument 0
pop pointer 0
push pointer 0
call Block.erase 1
pop temp 0
push this 3
push argument 1
push this 4
call Math.multiply 2
add
pop this 3
push this 6
push argument 1
add
pop this 6
push pointer 0
call Block.draw 1
pop temp 0
push constant 0
return
function Block.moveLeft 0
push argument 0
pop pointer 0
push pointer 0
call Block.erase 1
pop temp 0
push this 2
push this 4
sub
pop this 2
push this 5
push constant 1
sub
pop this 5
push pointer 0
call Block.draw 1
pop temp 0
push constant 0
return
function Block.getBlockShape 0
push argument 0
pop pointer 0
push this 1
return
function Block.getBlockSize 0
push argument 0
pop pointer 0
push this 7
return
function Block.getX 0
push argument 0
pop pointer 0
push this 2
return
function Block.setX 0
push argument 0
pop pointer 0
push argument 1
pop this 2
push constant 0
return
function Block.getY 0
push argument 0
pop pointer 0
push this 3
return
function Block.setY 0
push argument 0
pop pointer 0
push argument 1
pop this 3
push constant 0
return
function Block.getXMino 0
push argument 0
pop pointer 0
push this 5
return
function Block.setXMino 0
push argument 0
pop pointer 0
push argument 1
pop this 5
push constant 0
return
function Block.getYMino 0
push argument 0
pop pointer 0
push this 6
return
function Block.setYMino 0
push argument 0
pop pointer 0
push argument 1
pop this 6
push constant 0
return
function Block.getBottomYMino 4
push argument 0
pop pointer 0
label WHILE_EXP0
push local 1
push this 7
lt
not
if-goto WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push this 7
lt
not
if-goto WHILE_END1
push this 1
push local 0
push local 1
call Matrix.get 3
pop local 2
push local 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
pop local 3
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Block.getYMino 1
push local 3
add
return
function Block.getRightXMino 4
push argument 0
pop pointer 0
label WHILE_EXP0
push local 0
push this 7
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 7
lt
not
if-goto WHILE_END1
push this 1
push local 0
push local 1
call Matrix.get 3
pop local 2
push local 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
pop local 3
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Block.getXMino 1
push local 3
add
return
function Block.getLeftXMino 4
push argument 0
pop pointer 0
push this 7
push constant 1
sub
pop local 0
label WHILE_EXP0
push local 0
push constant 1
neg
gt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 7
lt
not
if-goto WHILE_END1
push this 1
push local 0
push local 1
call Matrix.get 3
pop local 2
push local 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
pop local 3
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Block.getXMino 1
push local 3
add
return
function Block.dispose 0
push argument 0
pop pointer 0
push this 1
call Matrix.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
